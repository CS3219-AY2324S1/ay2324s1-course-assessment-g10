version: '3'
services:
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api_gateway
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ENV_TYPE: docker
    ports:
      - "8000:8000"
      - "7999:7999"
      - "7998:7998"
    depends_on:
      - question-service
      - user-service
      - matching-service
      - collab-service

  question-service:
    container_name: question-service
    build: 
      context: ./question_service
    environment:
      - MONGODB_URI=mongodb://mongo:27017/question_service
      - PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    volumes:
      - questions_test_cases:/app/question_test_cases

  user-service:
    container_name: user-service
    build: 
      context: ./user_service
    environment:
      PORT: 8081
      SECRET_KEY: ${SECRET_KEY}

    ports:
      - "8081:8081"
    depends_on:
      - postgres
    volumes:
      - profile_pictures:/usr/src/app/public/profile_pictures

  code-execution:
    container_name: code-execution
    build: 
      context: ./code_execution
    environment:
      - PORT=8090
      - JUDGE0_API_KEY=${JUDGE0_API_KEY}
    ports:
      - "8090:8090"
    volumes:
      - questions_test_cases:/app/question_test_cases

  matching-service:
    container_name: matching-service
    build:
      context: ./matching_service
    environment:
      - PORT=8082
    ports:
      - "8082:8082"

  collab-service:
    container_name: collab-service
    environment:
      PORT: 8083
    build:
      context: ./collab_service
    ports:
      - "8083:8083"

  # judge0-server:
  #   container_name: judge0-server
  #   image: judge0/judge0:1.13.0
  #   ports:
  #     - "2358:2358"
  #   privileged: true
  #   environment:
  #     REDIS_PASSWORD: ${REDIS_PASSWORD}
  #     POSTGRES_HOST: postgres
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: judge0
  #     POSTGRES_PORT: ${PG_PORT}

  #   env_file:
  #     - config_env/config-judge0.env

  # judge0-workers:
  #   image: judge0/judge0:1.13.0
  #   command: ["./scripts/workers"]
  #   privileged: true
  #   environment:
  #     REDIS_PASSWORD: ${REDIS_PASSWORD}
  #     POSTGRES_HOST: postgres
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: judge0
  #     POSTGRES_PORT: ${PG_PORT}
  #   env_file:
  #     - config_env/config-judge0.env

  mongo:
    container_name: mongo
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-dev-data:/data/db

  postgres:    
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_PORT: ${PG_PORT}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  # redis:
  #   container_name: redis
  #   image: redis:7
  #   ports:
  #     - "6379:6379"
  #   command: [
  #     "bash", "-c",
  #     'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
  #   ]
  #   environment:
  #     REDIS_PASSWORD: ${REDIS_PASSWORD}


volumes:
  postgres_data:
  mongo-dev-data:
  questions_test_cases:
  profile_pictures:
